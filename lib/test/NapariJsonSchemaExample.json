{
  "additionalProperties": false,
  "definitions": {
    "BaseChannel": {
      "description": "TBD",
      "properties": {
        "label": {
          "title": "Label",
          "type": "string"
        },
        "wavelength_id": {
          "title": "Wavelength Id",
          "type": "string"
        }
      },
      "title": "BaseChannel",
      "type": "object"
    },
    "NapariWorkflowsInputSpecsItem": {
      "description": "TBD",
      "properties": {
        "channel": {
          "$ref": "#/definitions/BaseChannel"
        },
        "label_name": {
          "title": "Label Name",
          "type": "string"
        },
        "type": {
          "enum": [
            "image",
            "label"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "NapariWorkflowsInputSpecsItem",
      "type": "object"
    },
    "NapariWorkflowsOutputSpecsItem": {
      "description": "TBD",
      "properties": {
        "label_name": {
          "title": "Label Name",
          "type": "string"
        },
        "table_name": {
          "title": "Table Name",
          "type": "string"
        },
        "type": {
          "enum": [
            "label",
            "dataframe"
          ],
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "NapariWorkflowsOutputSpecsItem",
      "type": "object"
    }
  },
  "properties": {
    "component": {
      "description": "Path to the OME-Zarr image in the OME-Zarr plate that is processed. Example: \"some_plate.zarr/B/03/0\" (standard argument for Fractal tasks, managed by Fractal server)",
      "title": "Component",
      "type": "string"
    },
    "expected_dimensions": {
      "default": 3,
      "description": "Expected dimensions (either 2 or 3). Useful when loading 2D images that are stored in a 3D array as (1, size_x, size_y) [which is the default way Fractal stored 2D images], but you want to make sure the napari workflow gets a 2D array to process. Also useful to set to 2 when loading a 2D OME-Zarr that is saved as (size_x, size_y).",
      "title": "Expected Dimensions",
      "type": "integer"
    },
    "input_ROI_table": {
      "default": "FOV_ROI_table",
      "description": "Name of the ROI table over which the task loops to apply napari workflows. Example: \"FOV_ROI_table\" => loop over the field of views \"organoid_ROI_table\" => loop over the organoid ROI table generated by another task \"well_ROI_table\" => process the whole well as one image",
      "title": "Input Roi Table",
      "type": "string"
    },
    "input_paths": {
      "description": "List of input paths where the image data is stored as OME-Zarrs. Should point to the parent folder containing one or many OME-Zarr files, not the actual OME-Zarr file. Example: [\"/some/path/\"] This task only supports a single input path. (standard argument for Fractal tasks, managed by Fractal server)",
      "items": {
        "type": "string"
      },
      "title": "Input Paths",
      "type": "array"
    },
    "input_specs": {
      "additionalProperties": {
        "$ref": "#/definitions/NapariWorkflowsInputSpecsItem"
      },
      "description": "See examples above. TODO: Update after issue 404",
      "title": "Input Specs",
      "type": "object"
    },
    "level": {
      "default": 0,
      "description": "Pyramid level of the image to be used as input for napari-workflows. Choose 0 to process at full resolution. Levels > 0 are currently only supported for workflows that only have intensity images as input and only produce a label images as output.",
      "title": "Level",
      "type": "integer"
    },
    "metadata": {
      "description": "dictionary containing metadata about the OME-Zarr. This task requires the following elements to be present in the metadata: \"num_levels\": int, number of pyramid levels in the image. This determines how many pyramid levels are built for the segmentation. \"coarsening_xy\": int, coarsening factor in XY of the downsampling when building the pyramid. (standard argument for Fractal tasks, managed by Fractal server)",
      "title": "Metadata",
      "type": "object"
    },
    "output_path": {
      "description": "This parameter is not used by this task (standard argument for Fractal tasks, managed by Fractal server)",
      "title": "Output Path",
      "type": "string"
    },
    "output_specs": {
      "additionalProperties": {
        "$ref": "#/definitions/NapariWorkflowsOutputSpecsItem"
      },
      "description": "See examples above. TODO: Update after issue 404",
      "title": "Output Specs",
      "type": "object"
    },
    "relabeling": {
      "default": true,
      "description": "If ``True``, apply relabeling so that label values are unique across all ROIs in the well.",
      "title": "Relabeling",
      "type": "boolean"
    },
    "workflow_file": {
      "description": "Absolute path to napari-workflows YAML file",
      "title": "Workflow File",
      "type": "string"
    }
  },
  "required": [
    "input_paths",
    "output_path",
    "component",
    "metadata",
    "workflow_file",
    "input_specs",
    "output_specs"
  ],
  "title": "NapariWorkflowsWrapper",
  "type": "object"
}