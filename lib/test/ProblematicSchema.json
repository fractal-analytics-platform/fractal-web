{
  "title": "CreateOmeZarrMultiplex",
  "type": "object",
  "properties": {
    "input_paths": {
      "title": "Input Paths",
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of input paths where the image data from the microscope is stored (as TIF or PNG). Each element of the list is treated as another cycle of the multiplexing data, the cycles are ordered by their order in this list. Should point to the parent folder containing the images and the metadata files ``MeasurementData.mlf`` and ``MeasurementDetail.mrf`` (if present). Example: ``[\"/path/cycle1/\", \"/path/cycle2/\"]`` (standard argument for Fractal tasks, managed by Fractal server)"
    },
    "output_path": {
      "title": "Output Path",
      "type": "string",
      "description": "Path were the output of this task is stored. Example: \"/some/path/\" => puts the new OME-Zarr file in the \"/some/path/\" (standard argument for Fractal tasks, managed by Fractal server)"
    },
    "metadata": {
      "title": "Metadata",
      "type": "object",
      "description": "This parameter is not used by this task (standard argument for Fractal tasks, managed by Fractal server)"
    },
    "image_extension": {
      "title": "Image Extension",
      "default": "tif",
      "type": "string",
      "description": "Filename extension of images (e.g. `\"tif\"` or `\"png\"`)"
    },
    "image_glob_patterns": {
      "title": "Image Glob Patterns",
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "If specified, only parse images with filenames that match with all these patterns. Patterns must be defined as in https://docs.python.org/3/library/fnmatch.html, Example: ``image_glob_pattern=[\"*_B03_*\"]`` => only process well B03 ``image_glob_pattern=[\"*_C09_*\", \"*F016*\", \"*Z[0-5][0-9]C*\"]`` => only process well C09, field of view 16 and Z planes 0 - 59."
    },
    "allowed_channels": {
      "title": "Allowed Channels",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/OmeroChannel"
        }
      },
      "description": "A dictionary of lists of ``OmeroChannel``s, where each channel must include the ``wavelength_id`` attribute and where the ``wavelength_id`` values must be unique across each list. Dictionary keys represent channel indices (``\"0\",\"1\",..``)."
    },
    "num_levels": {
      "title": "Num Levels",
      "default": 5,
      "type": "integer",
      "description": "Number of resolution-pyramid levels. If set to 5, there will be the full-resolution level and 4 levels of downsampled images."
    },
    "coarsening_xy": {
      "title": "Coarsening Xy",
      "default": 2,
      "type": "integer",
      "description": "Linear coarsening factor between subsequent levels. If set to 2, level 1 is 2x downsampled, level 2 is 4x downsampled etc."
    },
    "metadata_table_files": {
      "title": "Metadata Table Files",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "If ``None``, parse Yokogawa metadata from mrf/mlf files in the input_path folder; else, a dictionary of key-value pairs like ``(acquisition, path)`` with ``acquisition`` a string and ``path`` pointing to a csv file containing the parsed metadata table."
    }
  },
  "required": [
    "input_paths",
    "output_path",
    "metadata",
    "allowed_channels"
  ],
  "additionalProperties": false,
  "definitions": {
    "Window": {
      "title": "Window",
      "description": "Custom class for Omero-channel window, related to OME-NGFF v0.4\n\nSee https://ngff.openmicroscopy.org/0.4/#omero-md.\nMain difference from the specs:\n\n    1. ``min`` and ``max`` are optional, since we have custom logic to set\n        their values.",
      "type": "object",
      "properties": {
        "min": {
          "title": "Min",
          "type": "integer"
        },
        "max": {
          "title": "Max",
          "type": "integer"
        },
        "start": {
          "title": "Start",
          "type": "integer"
        },
        "end": {
          "title": "End",
          "type": "integer"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "OmeroChannel": {
      "title": "OmeroChannel",
      "description": "Custom class for Omero channels, related to OME-NGFF v0.4.\n\nDifferences from OME-NGFF v0.4 specs\n(https://ngff.openmicroscopy.org/0.4/#omero-md)\n\n    1. Additional attributes ``wavelength_id`` and ``index``.\n    2. We make ``color`` an optional attribute, since we have custom\n       logic to set its value.\n    3. We make ``window`` an optional attribute, so that we can also\n       process zarr arrays which do not have this attribute.",
      "type": "object",
      "properties": {
        "wavelength_id": {
          "title": "Wavelength Id",
          "type": "string"
        },
        "index": {
          "title": "Index",
          "type": "integer"
        },
        "window": {
          "$ref": "#/definitions/Window"
        },
        "color": {
          "title": "Color",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "type": "string"
        },
        "active": {
          "title": "Active",
          "default": true,
          "type": "boolean"
        },
        "coefficient": {
          "title": "Coefficient",
          "default": 1,
          "type": "integer"
        },
        "inverted": {
          "title": "Inverted",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "wavelength_id"
      ]
    }
  }
}